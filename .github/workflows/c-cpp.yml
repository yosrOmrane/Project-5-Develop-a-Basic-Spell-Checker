name: Test Spellcheck Program # The name of the workflow, visible in the GitHub Actions tab.

on:
  push: # Trigger the workflow whenever code is pushed to the repository.
    branches:
      - main # Runs only if changes are pushed to the 'main' branch.
  pull_request: # Trigger the workflow when a pull request is created or updated.

jobs:
  build-and-test: # The name of the job.
    runs-on: ubuntu-latest # Specifies the virtual machine environment for the job.

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code # Descriptive name for the step.
        uses: actions/checkout@v3 # Uses a prebuilt GitHub Action to clone the repo into the VM.

      # Step 2: Install GCC compiler
      - name: Install GCC # Install the GNU Compiler Collection required for building C programs.
        run: sudo apt-get install -y gcc # Installs GCC using the system's package manager.

      # Step 3: Compile the spellcheck program
      - name: Build the program # Compile the 'spellcheck.c' file into an executable.
        run: gcc -o spellcheck spellcheck.c dict_lib.c # Compile the source files into an executable named 'spellcheck'.

      # Step 4: Run the spellcheck program with a test dataset
      - name: Run the test # Execute the compiled C program using a test dataset file.
        run: ./spellcheck dataset.txt # Runs the 'spellcheck' executable with the dataset file as input.

      # Step 5: Check for test failures
      - name: Check test result # Fail the job if the test results are not as expected.
        if: failure() # This step runs only if the previous step (Run the test) fails.
        run: exit 1 # Explicitly fails the job by exiting with a non-zero status code.
